
	Наше исследование ставит своей целью изучить виды сечений четырехмерной фигуры   тессеракта трехмерной гиперплоскостью. 
Для достижения данной цели нами была разработана программа на языке Java, использующая 4 введенные точки в четырехмерном пространстве или вектор и точку для построения трехмерного тела – сечения.
Для четырехмерного пространства была использована аналогия метода нахождения точек пересечений и метода поворота плоскости в трехмерном пространстве.

	Алгоритм, используя введенные данные, задает уравнение гиперплоскости сечения в четырехмерных координатах (ax + by + cz + dw + e = 0). 
Далее алгоритм находит точки пересечения данной гиперплоскости и тессеракта, и, если они есть, поворачивает сечение так, что нормаль плоскости сечения становится параллельной четвертой оси (0, 0, 0, 1). 
Для осуществления операции поворота сечения нами была использована матрица поворота.
После этого четвертая координата у всех точек сечения становится одинаковой, давая нам возможность получить изображение сечения в трехмерном пространстве.

	Наша работа включает в себя математическое обоснование используемого алгоритма, принцип работы программы и примеры полученных сечений, спроецированных на двумерную плоскость.

	Наша работа включает в себя создание программы, которая создает трехмерное сечение, поворачивает его, используя формулы поворота точки относительно начала базиса, а также проецирует его на двухмерную плоскость (монитор), математическое обоснование правильной работы программы и примеры полученных сечений.
В программу включена возможность поворота трехмерного сечения для лучшего его понимания, а также опция скрытия гиперкуба.
Чтобы было удобнее задавать гиперплоскость сечения, в программу был добавлен графический интерфейс (Java swing) для задания и редактирования четырехмерного вектора и точки. Снизу окна были добавлены панели, для введения координа мышкой интерактивно или клавиатурой для упрощения процесса задания четырехмерной точки-вектора.

	
//Введение
Введение, тезисы, примерное описание работы.
Данная работа ставит своей целью создать математическую модель пересечения четырехмерного гиперкуба или тессеракта трехмерной гиперплоскость, а также создать программную имплементацию данной математической задачи. Предполагается рассмотреть варианты возможных сечений данного гиперкуба.

Как известно, гиперкуб представляет собой куб в четырехмером пространстве, может также называться тетракубом и тессерактом. В даннной работе будет рассматриваться представление данной фигуры в виде множества точек в Евклидовом пространстве $(\pm 1,\pm 1,\pm 1, \pm 1)$. Тессеракт ограничивают 8 гиперплоскостей, т.е.подпространств, на единицу меньшей чем объемлющее пространство.

//Тессеракт, или четырехмерный куб
Конечно, невозможно представить графически, как будет выглядеть данный гиперкуб в четырехмерном пространстве, не выходя из трехмерного. Можно лишь представить проекцию данного тессеракта на трехмерныю плоскость. В случае проекции невозможно определить точки сечения, поэтому все действия нами выполнялись в четырехмерных координатах для получения трехмерного сечения, представляющего из себя многогранник.

Далее будет рассмотрен довольно простой способ представления проекции тессеракта на трехмерную плоскость. Этот метод позволяет представить примерно, как выглядит рабочий куб, но, как уже отмечалось выше, данный метод не позволяет определить точки пересечения гиперплоскости с четырехмерным кубом.
\subsection{Построение проекции гиперкуба на плоскость}
Попытаемся представить себе, как будет выглядеть гиперкуб, не выходя из трёхмерного пространства. Возьмем одномерное пространство (линию), выделим на нем отрезок длиной $а$. Теперь перенесем его на двумерную плоскость и на расстоянии $а$ от него нарисуем параллельный ему отрезок той же длины, затем соединим концы. Получится квадрат. Повторив эту операцию с двумерной плоскостью, получим трехмерный куб, а если применить ту же операцию к трехмерному пространству, то получится гиперкуб т.е. его можно представить, как два трехменых куба, лежащих в парралельных трехмерных пространствах, с попарно соединенными вершинами.

Если задуматься о том, как будет выглядеть сечение тессеракта в четырехмерном пространстве, можно прийти к следующей аналогии: сечением одномерного объекта будет точка, двумерного -  отрезок, трехмерного - плоскость. По аналогии сечением четырехмерного объекта является трехмерный объект. Наша задача состоит как раз в отыскании принципа построения данных сечений.

//Мат аппарат - пока не смотрел
Для начала нам нужно задать уравнение гиперплоскости сечения. Для этого на нужно либо 4 четырехмерные точки, либо четырехмерный вектор и точку. (написать, как задается). А так же у нас имеется графический интерфейс. Он включает в себя задание вектора и точки с помощью 2 квадратных полей (две плоскости на каждой (по-другому написать)) для каждого. <информатика> Гиперкуб мы храним, как множество сегментов(отрезков), которые в свою очередь состоят из двух четырехмерных точек (начала и конца).</информатика> После получения уравнения гиперплоскости сечения мы проверяем каждое ребро куба на пересечение (написать по-другому) с гиперплоскостью сечения. (написать как (если знаки разные...(нужно посмотреть в коде))). Далее мы проверяем, если точки сечения лежат на одной грани, то мы их соединяем (создаем из них сегмент). Дальше мы отрисовываем сегменты по двум точкам и у нас получается сечение. Однако, оно все еще в четырехмерных координатах, поэтому мы берем нормаль гиперплоскости сечения и вместе с сечением поворачиваем так (написать, как поворачиваем), чтобы она стала параллельна четвертой оси координат(0, 0, 0, 1). После чего четвертая координата у всего сечения становится однаковой, т.е. мы можем её не учитывать (неточно сказано) при отрисовке (заменить слово отрисовка). Так мы получили сечение в трехмерном пространстве. Далее мы проецируем трехмерное сечение на двумерную плоскость (написать как). После этого мы перерисовываем сечение. Далее можно его поворачивать по (как можно поворачивать).

//Описание работы программы
Для облегчения вычислений мы написали программу, котораю использует описанный выше алгоритм, для построения и повората трехмерного сечения и проецирует его на двумерную плоскость (монитор).

//Примеры сечений

//6-гранник (вроде правильный)
0 0 0 0
-1 1 0 1

//5-гранник (пока не очень хорошо получился, потом пофикшу)
0 0 0 -0.5
-0.75 0 -0.25 0.5
